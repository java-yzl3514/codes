
0-  Daha önce yazdığımız GeometricObject hiyerarşisinden herhangi bir sınıfı immutable hale getirin.
    Adlandırma Immutable- ön ekiyle olmalı. (Örn: ImmutableCircle)
0.1- Tasarladığınız sınıfı record olarak tekrar yazın.
0.2- İki yazım tarzını/tasarımı karşılaştırın ve gözlemlerinizi yazın.
---------------------------------------------------------------------------------------------------------
1-
  # Senaryo
 Belirli bir boyutta sabitlenmiş bir nesne dizisini yöneten "Sequence" adında bir sınıf tasarlayınız.Bu sınıf,
 eklendikçe nesneleri sırayla depolamalıdır.Temel amaç, bu Sequence sınıfının iç veri yapısını dış dünyaya ifşa etmeden
 elemanları üzerinde güvenli bir şekilde gezinilmesini sağlayan bir mekanizma oluşturmaktır.

 # Problem Tanımı
   Sequence sınıfının elemanları arasında ileriye doğru haraket edebilen "iterator" (çağrışım: gezgin/gezinme)
   işlevselliğini sağlamanız gerekmektedir. Bu işlevsellik, Iterator Design Pattern'e uygun olarak geliştirilmelidir.

 # Gereksinimler ve Kısıtlamalar
  1. Kapsüllemenin Korunması (Encapsulation): Sequence sınıfının içindeki Object[] dizisi kesinlikle private kalmalıdır.
  Dışarıdan hiçbir kod bu diziye doğrudan erişememeli ve onu değiştirememelidir.

  2. Arayüz Tasarımı (Interface Definition): Iterator mantığını standartlaştırmak için aşağıdaki metotları içeren
  "Selector" adında bir interface oluşturulmalıdır.
     - boolean end(): Dizinin sonuna gelinip gelinilmediğini kontrol
     - Object current(): Mevcut elemana geri döner
     - void next(): Sonraki elemana geçer

  3. Inner Class Kullanımı : Selector arayüzünü uygulayan sınıf, Sequence sınıfının için de mi yoksa ayrı bir sınıf olarak
  mı tasarlanmalı düşünün ve uygulayın

  4. Gösterim : Bir main metodu yazarak Sequence sınıfını test ediniz. 10 elemanlı bir Sequence oluşturun, içine [0-9]
  aralığında sayıları (String ya da Integer) ekleyin ve ardından tasarınımıza uygun iterator metodunu kullanarak
  tüm elemanları aralarında birer boşluk bırakarak ekrana yazdırınız.

2- SequenceSelector sınıfın implementasyonunu devam ettiriniz.

3- Builder Design Pattern

4-
   Senaryo
     Bir Server sınıfı tasarladığımızı düşünelim. Bu sunucunun başlatılabilmesi için port, timeout, max bağlantı sayısı
     ve SSL'in aktif olup olmadığı gibi birden fazla yapılandırma parametresi gerekmektedir.Tüm bu parametreleri alan
     bir ctor yazmak kodun okunabilirliğini düşürebilir. Builder Design Pattern kullanarak sorunu çözünüz.

   Problem Tanımı
    Server sınıfının yapılandırma nesnesini adım adım oluşturmak için "Builder" sınıf oluşturun. Bu Builder, Server
    sınıfının bir parçası olmalı ancak Server nesnesine bağlı olmadan çalışabilmelidir.


    Gereksinimler ve Kısıtlar
      Server Sınıfı:
         - port, timeout, maxConnections ve useSSL gibi alanları olmalıdır.
         - Ctor, private olmalıdır.

      Builder Sınıfı
        - Server sınıfındaki yapılandırma alanlarının aynılarına sahip olmalıdır.
        - port(int port), timeout(int timeout) gibi ayar metotları bulunmalıdır. Bu metotlar, zincirleme çağrıları
           (metot chaining) destekleyecek şekilde yazılmalıdır.
        - Server nesnesini oluşturan ve döndüren build() adında bir metodu olmalıdır.

---------------------------------------------------------------------------------------------------------------------
5-
  Senaryo
    Basit bir UI(Kullanıcı Arayüzü) kütüphanesi için bir "Button" sınıfı geliştirdiğimizi düşünelim. Her bir butona
    tıklandığında farklı bir eylemin tetiklenmesini sağlamak istiyoruz. Bu eylemleri, butonları oluşturduğumuz yerde,
    anlık olarak ve isimsiz bir şekilde tanımlamak istiyoruz.

  Problem Tanımı
    Bir ActionListener arayüzü ve bu arayüzü kullanan bir Button sınıfı tasarlayın. main metodunda bir buton
    oluştururken, ona tıklandığında ne yapacağını belirten kodu anonymous inner class kullanarak atayın.

  Gereksinim ve Kısıtlar:
    1- ActionListener arayüzü
         void onAction()
    2- Button sınıfı
         - ActionListener türünden bir "listener" veri alanı olmalı
         - setActionListener metodu olmalı
         - Tıklama olayını simüle eden public void click() metodu olmalı.







